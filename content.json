{"meta":{"title":"who's coder ?","subtitle":"Life is always hard!","description":"程序猿的小生活！","author":"whosc","url":"https://whosc.github.io"},"pages":[{"title":"about","date":"2018-01-10T13:23:07.000Z","updated":"2018-01-11T01:06:35.733Z","comments":true,"path":"about/index.html","permalink":"https://whosc.github.io/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-01-10T13:21:10.000Z","updated":"2018-01-15T03:14:40.805Z","comments":false,"path":"categories/index.html","permalink":"https://whosc.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-01-10T13:23:17.000Z","updated":"2018-01-15T03:14:40.805Z","comments":false,"path":"tags/index.html","permalink":"https://whosc.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"给laravel 框架的css 、js 设置一个可以手动开关的开发模式","slug":"set-debug-mode-for-laravel-css-js-cache","date":"2018-01-22T16:00:00.000Z","updated":"2018-01-23T03:45:44.522Z","comments":true,"path":"set-debug-mode-for-laravel-css-js-cache/","link":"","permalink":"https://whosc.github.io/set-debug-mode-for-laravel-css-js-cache/","excerpt":"最近的新项目使用到了laravel 框架开发项目，修改js 的时候传到线上的服务器上，一直刷新没有反应，琢磨着给他设置一个开发模式，可以手动设置开、关。这样在测试的时候方便一些，同时不影响正常的线上网站缓存。 定义一个用来设置的常量1define(&quot;CSSJS_DEBUG&quot; , &apos;0&apos;); // 开启css js 调试模式，不缓存。","text":"最近的新项目使用到了laravel 框架开发项目，修改js 的时候传到线上的服务器上，一直刷新没有反应，琢磨着给他设置一个开发模式，可以手动设置开、关。这样在测试的时候方便一些，同时不影响正常的线上网站缓存。 定义一个用来设置的常量1define(&quot;CSSJS_DEBUG&quot; , &apos;0&apos;); // 开启css js 调试模式，不缓存。 在自定义的自动加载的方法中，添加一个方法.常量设置成真的时候开启开发模式，不缓存css 和js ,否则没小时自动更新一下缓存。 12345678910111213/** * css js 调试模式不缓存 * * @return str */function cssJsDebug() &#123; if(CSSJS_DEBUG)&#123; return &apos;?v=&apos;.time(); &#125;else&#123; return &apos;?v=&apos;. date(&quot;Ymdi&quot;,time()); &#125;&#125; 给新加的css js 添加后缀，这样可以不缓存css js 的文件。如下：123&lt;link href=&quot;&#123;&#123;asset(&apos;admin/custom/plugins/layui/css/layui.css&apos;.cssJsDebug() )&#125;&#125;&quot; rel=&quot;stylesheet&quot;&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;&#123;&#123;asset(&apos;admin/js/jquery-2.1.1.min.js&apos;.cssJsDebug() )&#125;&#125;&quot;&gt;&lt;/script&gt;","categories":[{"name":"技术","slug":"技术","permalink":"https://whosc.github.io/categories/技术/"},{"name":"laravel","slug":"技术/laravel","permalink":"https://whosc.github.io/categories/技术/laravel/"}],"tags":[{"name":"php","slug":"php","permalink":"https://whosc.github.io/tags/php/"},{"name":"laravel","slug":"laravel","permalink":"https://whosc.github.io/tags/laravel/"}]},{"title":"Magento can not delete attribute options","slug":"magento can not delete attribute options","date":"2018-01-21T16:00:00.000Z","updated":"2018-01-22T06:34:31.938Z","comments":true,"path":"magento can not delete attribute options/","link":"","permalink":"https://whosc.github.io/magento can not delete attribute options/","excerpt":"The attribute has more than 200 options. Is maybe the high number of the options causing this problem? The nginx error log below122018/01/22 14:21:23 [error] 4034#0: *335424 FastCGI sent in stderr: &quot;PHP message: PHP Warning: Unknown: Input variables exceeded 1000. To increase the limit change max_input_vars in php.ini. in Unknown on line 0&quot; while reading response header from upstream","text":"The attribute has more than 200 options. Is maybe the high number of the options causing this problem? The nginx error log below122018/01/22 14:21:23 [error] 4034#0: *335424 FastCGI sent in stderr: &quot;PHP message: PHP Warning: Unknown: Input variables exceeded 1000. To increase the limit change max_input_vars in php.ini. in Unknown on line 0&quot; while reading response header from upstream Solution: 1.change the php.ini config of max_input_vars = 1000 to max_input_vars = 50002.restart or reload the php-fpm. then have a try.","categories":[{"name":"技术","slug":"技术","permalink":"https://whosc.github.io/categories/技术/"},{"name":"Magento","slug":"技术/Magento","permalink":"https://whosc.github.io/categories/技术/Magento/"}],"tags":[{"name":"magento","slug":"magento","permalink":"https://whosc.github.io/tags/magento/"}]},{"title":"Add A Magento Currency Exchange Update Service","slug":"add-a-magento-currency-exchange-update-service","date":"2018-01-15T16:00:00.000Z","updated":"2018-01-16T07:11:28.288Z","comments":true,"path":"add-a-magento-currency-exchange-update-service/","link":"","permalink":"https://whosc.github.io/add-a-magento-currency-exchange-update-service/","excerpt":"The default currency exchange rate updater that ships with Magento Community Edition is broken. So, we need to replace the default Webservicex with another, working exchange rate updater. Custom ModuleFile: app/etc/modules/TC_Currency.xml","text":"The default currency exchange rate updater that ships with Magento Community Edition is broken. So, we need to replace the default Webservicex with another, working exchange rate updater. Custom ModuleFile: app/etc/modules/TC_Currency.xml12345678910111213&lt;?xml version=&quot;1.0&quot;?&gt;&lt;config&gt; &lt;modules&gt; &lt;TC_Currency&gt; &lt;active&gt;true&lt;/active&gt; &lt;codePool&gt;local&lt;/codePool&gt; &lt;depends&gt; &lt;Mage_Adminhtml /&gt; &lt;Mage_Core /&gt; &lt;/depends&gt; &lt;/TC_Currency&gt; &lt;/modules&gt;&lt;/config&gt; File: app/code/local/TC/Currency/etc/config.xml 12345678910111213141516171819202122232425&lt;?xml version=&quot;1.0&quot;?&gt;&lt;config&gt; &lt;modules&gt; &lt;TC_Currency&gt; &lt;version&gt;1.0.0&lt;/version&gt; &lt;/TC_Currency&gt; &lt;/modules&gt; &lt;global&gt; &lt;currency&gt; &lt;import&gt; &lt;services&gt; &lt;yahoofinance&gt; &lt;name&gt;Yahoo Finance&lt;/name&gt; &lt;model&gt;TC_Currency_Model_Yahoo&lt;/model&gt; &lt;/yahoofinance&gt; &lt;/services&gt; &lt;/import&gt; &lt;/currency&gt; &lt;models&gt; &lt;tc_currency&gt; &lt;class&gt;TC_Currency_Model_Yahoo&lt;/class&gt; &lt;/tc_currency&gt; &lt;/models&gt; &lt;/global&gt;&lt;/config&gt; File: app/code/local/TC/Currency/Model/Yahoo.php 12345678910111213141516171819202122232425262728293031&lt;?phpclass TC_Currency_Model_Yahoo extends Mage_Directory_Model_Currency_Import_Abstract&#123; protected $_url = &apos;http://quote.yahoo.com/d/quotes.csv?s=&#123;&#123;CURRENCY_FROM&#125;&#125;&#123;&#123;CURRENCY_TO&#125;&#125;=X&amp;f=l1&amp;e=.csv&apos;; protected $_messages = array(); protected function _convert($currencyFrom, $currencyTo, $retry=0) &#123; $url = str_replace(&apos;&#123;&#123;CURRENCY_FROM&#125;&#125;&apos;, $currencyFrom, $this-&gt;_url); $url = str_replace(&apos;&#123;&#123;CURRENCY_TO&#125;&#125;&apos;, $currencyTo, $url); try &#123; sleep(1); $handle = fopen($url, &quot;r&quot;); $exchange_rate = fread($handle, 2000); fclose($handle); if (!$exchange_rate) &#123; $this-&gt;_messages[] = Mage::helper(&apos;directory&apos;)-&gt;__(&apos;Cannot retrieve rate from %s&apos;, $url); return null; &#125; return (float) $exchange_rate * 1.0; &#125; catch (Exception $e) &#123; if ($retry == 0) &#123; $this-&gt;_convert($currencyFrom, $currencyTo, 1); &#125; else &#123; $this-&gt;_messages[] = Mage::helper(&apos;directory&apos;)-&gt;__(&apos;Cannot retrieve rate from %s&apos;, $url); &#125; &#125; &#125;&#125; By default, the Webservicex model sits at a deeper level than this, we’re just keeping the structure simple. Our module is finished. You’ll need to flush the caches once this has been uploaded to your Magento installation. The currency update service appears in the following select lists: Admin &gt; System &gt; Manage Currency &gt; Rates Admin &gt; System &gt; Configuration &gt; Currency Setup &gt; Scheduled Import Settings &gt; [Service] [Note]: the http://quote.yahoo.com/d/quotes.csv?s==X&amp;f=l1&amp;e=.csv is not work now, you need replace an api which can get the data you want !","categories":[{"name":"技术","slug":"技术","permalink":"https://whosc.github.io/categories/技术/"},{"name":"Magento","slug":"技术/Magento","permalink":"https://whosc.github.io/categories/技术/Magento/"}],"tags":[{"name":"magento","slug":"magento","permalink":"https://whosc.github.io/tags/magento/"}]},{"title":"Magento1.x paypal 支付不成功问题","slug":"magento-paypal-need-curl-update","date":"2018-01-14T16:00:00.000Z","updated":"2018-01-15T06:02:45.059Z","comments":true,"path":"magento-paypal-need-curl-update/","link":"","permalink":"https://whosc.github.io/magento-paypal-need-curl-update/","excerpt":"之前magento 订单一直正常，后来查看订单的状态一直是在pengding 状态，查看后台报错了1Your current version of cURL php5 module is 7.29.0, which can prevent services that require TLS v1.2 from working correctly. It is recommended to update your cURL php5 module to version 7.34.0 or higher.","text":"之前magento 订单一直正常，后来查看订单的状态一直是在pengding 状态，查看后台报错了1Your current version of cURL php5 module is 7.29.0, which can prevent services that require TLS v1.2 from working correctly. It is recommended to update your cURL php5 module to version 7.34.0 or higher. 问题明显是要我们升级linux curl 的版本 查看curl 的版本1curl --version 创建一个源文件,并添加下面的内容:1234567 vim /etc/yum.repos.d/city-fan.repo [CityFan]name=City Fan Repobaseurl=http://www.city-fan.org/ftp/contrib/yum-repo/rhel$releasever/$basearch/enabled=1gpgcheck=0 开启源并且更新curl123yum install epel-release -yyum update curl 检查curl 是否更新成功1curl --version 重启php-fpm1path/php-fpm restart 再次登录在magento 后台，上面的报错后消失。测试paypal 支付，成功！","categories":[{"name":"技术","slug":"技术","permalink":"https://whosc.github.io/categories/技术/"},{"name":"Magento","slug":"技术/Magento","permalink":"https://whosc.github.io/categories/技术/Magento/"}],"tags":[{"name":"magento","slug":"magento","permalink":"https://whosc.github.io/tags/magento/"}]},{"title":"php 实现生成阿里云api 签名的代码示例","slug":"create-aliyun-api-function","date":"2018-01-12T16:00:00.000Z","updated":"2018-01-13T03:48:56.577Z","comments":true,"path":"create-aliyun-api-function/","link":"","permalink":"https://whosc.github.io/create-aliyun-api-function/","excerpt":"阿里云的api 签名文档实在是看着难受，不怎么清晰。 自己对接看了半天，希望对看到的人有些帮助。","text":"阿里云的api 签名文档实在是看着难受，不怎么清晰。 自己对接看了半天，希望对看到的人有些帮助。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123&lt;?php // 注意使用GMT时间 date_default_timezone_set(&quot;GMT&quot;); $dateTimeFormat = &apos;Y-m-d\\TH:i:s\\Z&apos;; // ISO8601规范 $accessKeyId = &apos;accessKeyId&apos;; // 这里填写您的Access Key ID $accessKeySecret = &apos;accessKeySecret&apos;; // 这里填写您的Access Key Secret $SignatureNonce = time().rand(100000000,200000000);$data = array( // 公共参数 &apos;Format&apos; =&gt; &apos;json&apos;, &apos;Version&apos; =&gt; &apos;2014-08-15&apos;, &apos;AccessKeyId&apos; =&gt; $accessKeyId, &apos;SignatureMethod&apos; =&gt; &apos;HMAC-SHA1&apos;, &apos;SignatureNonce&apos;=&gt; $SignatureNonce, &apos;Timestamp&apos; =&gt; date($dateTimeFormat), &apos;SignatureVersion&apos; =&gt; &apos;1.0&apos;, // 接口参数 &apos;Action&apos;=&gt;&apos;DescribeDBInstanceAttribute&apos;, &apos;DBInstanceId&apos; =&gt; &apos;DBInstanceId&apos;, // 这里填写您的实例ID ); $data[&apos;Signature&apos;] = computeSignature($data, $accessKeySecret); $url = &apos;https://rds.aliyuncs.com/?&apos;;$pageContents = get_https_data($url . http_build_query($data),$postData=&apos;&apos;,$header=&apos;&apos;,$isheader=0,$proxy=&apos;&apos;,$cookie_file=&apos;&apos;,$isSave=0,$debug=0,$sslVersion=0,$time=30,$gzip=0);print_r(json_decode($pageContents));exit;// 发送请求 echo $url . http_build_query($data).&quot;\\r\\n&quot;; function get_https_data($url,$postData,$header=array(),$isheader=0,$proxy=&apos;&apos;,$cookie_file=&apos;&apos;,$isSave=0,$debug=0,$sslVersion=0,$time=30,$gzip=0,$autoRedirect=&apos;&apos;)&#123; $ch = curl_init(); curl_setopt($ch,CURLOPT_URL, $url); if(!empty($postData))&#123; curl_setopt ($ch, CURLOPT_POST, true); curl_setopt ($ch, CURLOPT_POSTFIELDS, $postData); &#125; curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 5); curl_setopt($ch, CURLOPT_TIMEOUT,$time); curl_setopt($ch, CURLOPT_USERAGENT, &apos;Mozilla/5.0 (Windows NT 5.1; rv:44.0) Gecko/20100101 Firefox/44.0&apos;); curl_setopt($ch, CURLINFO_HEADER_OUT, TRUE); if(!empty($header))&#123; curl_setopt($ch, CURLOPT_HTTPHEADER,$header); &#125; if(!empty($isheader))&#123; curl_setopt($ch, CURLOPT_HEADER, $isheader); &#125; if(!empty($autoRedirect))&#123; curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1); &#125; if(!empty($cookie_file))&#123; if(!empty($isSave))&#123; // 存放Cookie信息 curl_setopt ( $ch, CURLOPT_COOKIEJAR, $cookie_file ); &#125;else&#123; // 读取文件所储存的Cookie信息 curl_setopt ( $ch, CURLOPT_COOKIEFILE, $cookie_file ); &#125; &#125; if(!empty($sslVersion))&#123; curl_setopt($ch, CURLOPT_SSLVERSION,$sslVersion); &#125; if(!empty($proxy))&#123; curl_setopt($ch, CURLOPT_PROXY, $proxy); &#125; if(!empty($debug))&#123; curl_setopt($ch,CURLOPT_VERBOSE,true); curl_setopt($ch,CURLOPT_FAILONERROR,TRUE); &#125; if (!empty($gzip)) &#123; curl_setopt($ch, CURLOPT_ENCODING, &apos;gzip&apos; ); &#125; curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false); $html = curl_exec($ch); if(!empty($debug))&#123; // print_r(curl_error($ch)); $http_code = curl_getinfo($ch); // print_r($http_code); $htmls = array(); $htmls[&apos;http_code&apos;] = $http_code[&apos;http_code&apos;]; $htmls[&apos;html&apos;] = $html; $html = $htmls; &#125; curl_close($ch); return $html;&#125;function percentEncode($str) &#123; // 使用urlencode编码后，将&quot;+&quot;,&quot;*&quot;,&quot;%7E&quot;做替换即满足ECS API规定的编码规范 $res = urlencode($str); $res = preg_replace(&apos;/\\+/&apos;, &apos;%20&apos;, $res); $res = preg_replace(&apos;/\\*/&apos;, &apos;%2A&apos;, $res); $res = preg_replace(&apos;/%7E/&apos;, &apos;~&apos;, $res); return $res; &#125; function computeSignature($parameters, $accessKeySecret) &#123; // 将参数Key按字典顺序排序 ksort($parameters); // 生成规范化请求字符串 $canonicalizedQueryString = &apos;&apos;; foreach($parameters as $key =&gt; $value) &#123; $canonicalizedQueryString .= &apos;&amp;&apos; . percentEncode($key) . &apos;=&apos; . percentEncode($value); &#125; // 生成用于计算签名的字符串 stringToSign $stringToSign = &apos;GET&amp;%2F&amp;&apos; . percentencode(substr($canonicalizedQueryString, 1)); //echo &quot;&lt;br&gt;&quot;.$stringToSign.&quot;&lt;br&gt;&quot;; // 计算签名，注意accessKeySecret后面要加上字符&apos;&amp;&apos; $signature = base64_encode(hash_hmac(&apos;sha1&apos;, $stringToSign, $accessKeySecret . &apos;&amp;&apos;, true)); return $signature; &#125; ?&gt;","categories":[{"name":"技术","slug":"技术","permalink":"https://whosc.github.io/categories/技术/"},{"name":"php","slug":"技术/php","permalink":"https://whosc.github.io/categories/技术/php/"}],"tags":[{"name":"php","slug":"php","permalink":"https://whosc.github.io/tags/php/"}]},{"title":"php7 安装imap 扩展","slug":"install-php7-imap","date":"2018-01-10T16:00:00.000Z","updated":"2018-01-12T01:21:49.412Z","comments":true,"path":"install-php7-imap/","link":"","permalink":"https://whosc.github.io/install-php7-imap/","excerpt":"安装 php-imap 网上安装php7-imap 扩展的教程大多都太老了，不适用与现在在php7的版本，走了不少弯路，希望能帮到看到的人。","text":"安装 php-imap 网上安装php7-imap 扩展的教程大多都太老了，不适用与现在在php7的版本，走了不少弯路，希望能帮到看到的人。 php -v //查看当前php的版本12345[root@vultr ~]# php -vPHP 7.1.12 (cli) (built: Nov 27 2017 11:01:12) ( NTS )Copyright (c) 1997-2017 The PHP GroupZend Engine v3.1.0, Copyright (c) 1998-2017 Zend Technologies with Zend OPcache v7.1.12, Copyright (c) 1999-2017, by Zend Technologies 查看已经安装的扩展 yum list installed | grep php12345678910111213141516[root@vultr ~]# yum list installed | grep phpmod_php71u.x86_64 7.1.12-1.ius.centos7 @ius php71u-bcmath.x86_64 7.1.12-1.ius.centos7 @ius php71u-cli.x86_64 7.1.12-1.ius.centos7 @ius php71u-common.x86_64 7.1.12-1.ius.centos7 @ius php71u-devel.x86_64 7.1.12-1.ius.centos7 @ius php71u-gd.x86_64 7.1.12-1.ius.centos7 @ius php71u-intl.x86_64 7.1.12-1.ius.centos7 @ius php71u-json.x86_64 7.1.12-1.ius.centos7 @ius php71u-mbstring.x86_64 7.1.12-1.ius.centos7 @ius php71u-mcrypt.x86_64 7.1.12-1.ius.centos7 @ius php71u-mysqlnd.x86_64 7.1.12-1.ius.centos7 @ius php71u-opcache.x86_64 7.1.12-1.ius.centos7 @ius php71u-pdo.x86_64 7.1.12-1.ius.centos7 @ius php71u-soap.x86_64 7.1.12-1.ius.centos7 @ius php71u-xml.x86_64 7.1.12-1.ius.centos7 @ius 安装php71u-imap1yum insatll php71u-imap -y 修改配置12345cp /usr/lib64/php/modules/imap.so /usr/local/php/lib/php/extensions/no-debug-non-zts-20160303/imap.sovim path/php.ini添加 extension = &quot;imap.so&quot; 重启php-fpm不存在php71u-soap 的时候。 请到这里下载https://pkgs.org/download/php70u-imap","categories":[{"name":"技术","slug":"技术","permalink":"https://whosc.github.io/categories/技术/"},{"name":"运维","slug":"技术/运维","permalink":"https://whosc.github.io/categories/技术/运维/"}],"tags":[{"name":"php","slug":"php","permalink":"https://whosc.github.io/tags/php/"},{"name":"运维","slug":"运维","permalink":"https://whosc.github.io/tags/运维/"}]},{"title":"docker 常用基础命令！","slug":"docker-base-command-01","date":"2018-01-09T16:00:00.000Z","updated":"2018-01-12T01:21:49.411Z","comments":true,"path":"docker-base-command-01/","link":"","permalink":"https://whosc.github.io/docker-base-command-01/","excerpt":"卸载老版本的 docker1234$ sudo yum remove docker \\ docker-common \\ docker-selinux \\ docker-engine","text":"卸载老版本的 docker1234$ sudo yum remove docker \\ docker-common \\ docker-selinux \\ docker-engine 安装docker1yum install docker 运行容器12345678910docker run -t :在新的容器中制定一个伪终端或终端-i :允许你对容器内的标准输入 (STDIN) 进行交互。-d :让容器在后台运行-P :将容器内部使用的网络端口映射到我们使用的主机上 -p :绑定指定端口示例：docker run -d -p 5000:5000 training/webapp python app.pyexit : 从交互式的容器中退出 停止容器1234dokcer stop [容器名|容器ID]停止所有容器docker stop $(docker ps -a -q) 查看正在运行的容器12docker ps 查看容器内标准输出1docker logs [容器名|容器ID] 查看容器的网络端口1docker port [容器名|容器ID] 查看容器内运行的进程1docker top 查看Docker的底层信息12345678910111213docker inspectrunoob@runoob:~$ docker inspect determined_swanson[ &#123; &quot;Id&quot;: &quot;7a38a1ad55c6914b360b565819604733db751d86afd2575236a70a2519527361&quot;, &quot;Created&quot;: &quot;2016-05-09T16:20:45.427996598Z&quot;, &quot;Path&quot;: &quot;python&quot;, &quot;Args&quot;: [ &quot;app.py&quot; ], &quot;State&quot;: &#123; &quot;Status&quot;: &quot;running&quot;,...... 重启容器1docker star [容器名|容器ID] 删除容器,删除前需要先停止123docker rm [容器名|容器id]docker rm $(docker ps -a -q) 列出所有镜像1docker images 查找镜像1docker search mysql","categories":[{"name":"技术","slug":"技术","permalink":"https://whosc.github.io/categories/技术/"},{"name":"docker","slug":"技术/docker","permalink":"https://whosc.github.io/categories/技术/docker/"}],"tags":[{"name":"docker","slug":"docker","permalink":"https://whosc.github.io/tags/docker/"}]}]}